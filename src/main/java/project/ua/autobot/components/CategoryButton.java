package project.ua.autobot.components;

import java.io.File;
import java.util.List;
import java.io.IOException;
import java.util.ArrayList;
import lombok.AllArgsConstructor;
import project.ua.autobot.entities.Car;
import project.ua.autobot.properties.Keyboard;
import project.ua.autobot.entities.VideoPaths;
import project.ua.autobot.interfaces.CarRepos;
import project.ua.autobot.entities.TypesImages;
import project.ua.autobot.properties.Properties;
import org.springframework.stereotype.Component;
import org.springframework.core.io.ClassPathResource;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.objects.CallbackQuery;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.methods.send.SendVideo;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.DeleteMessage;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;

@AllArgsConstructor
@Component
public class CategoryButton extends TelegramLongPollingBot {
    private final Properties c;
    private final CarRepos carRepos;

    @Override
    public String getBotUsername() {
        return c.getBotName();
    }

    @Override
    public String getBotToken() {
        return c.getBotToken();
    }

    @Override
    public void onUpdateReceived(Update update) {
        CallbackQuery callbackQuery = update.getCallbackQuery();
        String callbackData = callbackQuery.getData();
        long chatId = callbackQuery.getMessage().getChatId();
        if (callbackData.equals("–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó")) {
            sendInlineCategoriesKeyboard(chatId);
        } else if (!callbackData.equals("–ë—É–¥–æ–≤–∞")) {
            sendCarsByCategory(chatId, callbackData);
        }
        if (callbackData.equals("close")) {
            deleteMessage(chatId, callbackQuery.getMessage().getMessageId());
        }
    }

    public void deleteMessage(long chatId, int messageId) {
        DeleteMessage deleteMessage = new DeleteMessage();
        deleteMessage.setChatId(String.valueOf(chatId));
        deleteMessage.setMessageId(messageId);
        try {
            execute(deleteMessage);
        } catch (TelegramApiException e) {
            throw new RuntimeException(e);
        }
    }

    public void sendInlineCategoriesKeyboard(long chatId) {
        Keyboard keyboardBuilder = new Keyboard();
        InlineKeyboardMarkup inlineKeyboardMarkup = keyboardBuilder.buildInlineCategoriesKeyboard();
        SendMessage message = new SendMessage();
        message.setChatId(String.valueOf(chatId));
        message.setText(
            """
            –©–æ —Å–∫–∞–∑–∞—Ç–∏ –ø—Ä–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—å?

            –¶–µ —Å–≤–æ–±–æ–¥–∞. –¶–µ —Ä—ñ—á, —è–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –í–∞—à —Å—Ç–∏–ª—å —Ç–∞ –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—å. \
            –¶–µ –ø—Ä–µ–¥–º–µ—Ç –∂–∏—Ç—Ç—è, —è–∫–∏–π –∑–º—ñ–Ω—é—î –í–∞—à–µ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è —á–∞—Å—É. –û—Å–æ–±–ª–∏–≤—É —É–≤–∞–≥—É —Ö–æ—á–µ—Ç—å—Å—è –ø—Ä–∏–¥—ñ–ª–∏—Ç–∏ \
            –∞–º–µ—Ä–∏–∫–∞–Ω—Å—å–∫–æ–º—É –∞–≤—Ç–æ–ø—Ä–æ–º—É. –°–∞–º–µ —ó—Ö–Ω—ñ –º–∞—à–∏–Ω–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä—É—é—Ç—å —É—Å–µ —Ç–µ, —â–æ –≤–∏—Ä–∞–∂–∞—î—Ç—å—Å—è \
            –≤ —Ü–∏—Ö —Ç–∏–ø–∞—Ö –∞–≤—Ç–æ. –ö–æ–∂–µ–Ω –≤–∞—Ä—ñ–∞–Ω—Ç –ø—Ä–æ–ø–æ–Ω—É—î —Å–≤–æ—ó —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –ø–µ—Ä–µ–≤–∞–≥–∏ —Ç–∞ –≤—Ä–∞–∂–∞—î —Å–≤–æ—ó–º —Å—Ç–∏–ª–µ–º, \
            –¥–∏–∑–∞–π–Ω–æ–º —Ç–∞ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ—Å—Ç—é. –¶–µ —Å–ø—Ä–∞–≤–∂–Ω—ñ –º–æ–Ω—Å—Ç—Ä–∏ –Ω–∞ –¥–æ—Ä–æ–≥–∞—Ö.\s

            –î–∞–Ω—ñ –ø—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫–∏ \
            –ø–æ–ø—É–ª—è—Ä–Ω—ñ —â–µ –ø–æ —Ü–µ–π –¥–µ–Ω—å. –ë—ñ–ª—å—à—ñ—Å—Ç—å –∑ –Ω–∏—Ö –º–æ–∂–Ω–∞ –ø–æ–±–∞—á–∏—Ç–∏ –≤ –∫–ª—ñ–ø–∞—Ö, —Ñ—ñ–ª—å–º–∞—Ö, –ø–µ—Ä–µ–¥–∞—á–∞—Ö —ñ —Ç–∞–∫ –¥–∞–ª—ñ, \
            –ø—Ä–∏—á–æ–º—É, –∞–≤—Ç–æ –∑—É—Å—Ç—Ä—ñ—á–∞—é—Ç—å—Å—è —ñ 50-—Ö —ñ 60-—Ö —Ä–æ–∫—ñ–≤. –ê–º–µ—Ä–∏–∫–∞–Ω—Ü—ñ –≤–∫–ª–∞–¥–∞—é—Ç—å –±–∞–≥–∞—Ç–æ —á–∞—Å—É, –±–∞–≥–∞—Ç–æ –∫–æ—à—Ç—ñ–≤ \
            —Ç–∞ —Å–∏–ª–∏ –≤ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è, –≤–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–Ω—è —Ç–∞ —Ç—é–Ω—ñ–Ω–≥. –¢–æ–º—É —ñ –≤–∏—Ö–æ–¥–∏—Ç—å, —â–æ –∫–æ–∂–Ω–∞ —Ç–∞—á–∫–∞ –ø–æ-—Å–≤–æ—î–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∞, \
            –ø–æ—Ç—É–∂–Ω–∞ —Ç–∞ –Ω–∞–±–∏—Ä–∞—î –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—ñ —Å–µ—Ä–µ–¥ –∞–≤—Ç–æ–ª—é–±–∏—Ç–µ–ª—ñ–≤. –ó–∞–¥–Ω—ñ–π –ø—Ä–∏–≤—ñ–¥, –º–µ—Ö–∞–Ω—ñ—á–Ω–∞ –∫–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á, \
            –ø—ñ–¥ –∫–∞–ø–æ—Ç–æ–º 1000 –∫—ñ–Ω—Å—å–∫–∏—Ö —Å–∏–ª, —Å—Ç–∏–ª—å, –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å, –ø—Ä–æ—Å—Ç—ñ —Ñ–æ—Ä–º–∏ —Ç–∞ —á—ñ—Ç–∫—ñ –ª—ñ–Ω—ñ—ó - –æ—Å—å, —â–æ –æ–∑–Ω–∞—á–∞—î \
            –∫–ª–∞—Å–∏–∫–∞. –û—Å—å —â–æ –æ–∑–Ω–∞—á–∞—î —Å–ø—Ä–∞–≤–∂–Ω—î –∞–≤—Ç–æ. –ü—Ä–æ —Ü—ñ –≤–∏—Ç–≤–æ—Ä–∏ –º–∏—Å—Ç–µ—Ü—Ç–≤–∞ –º–æ–∂–Ω–∞ –≥–æ–≤–æ—Ä–∏—Ç–∏ —ñ –≥–æ–≤–æ—Ä–∏—Ç–∏ \
            –∞–ª–µ, —î –≤–∞—Ä—ñ–∞–Ω—Ç –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è –∑ –ª–µ–≥–µ–Ω–¥–∞–º–∏, —Ä–µ—Ç—Ä–æ–∫–∞—Ä–∞–º–∏ —Ç–∞ –µ–∫—Å–∫–ª—é–∑–∏–≤–∞–º–∏ –∞–≤—Ç–æ—ñ–Ω–¥—É—Å—Ç—Ä—ñ—ó. –ü–æ—ó—Ö–∞–ª–∏ üèÅ\s\s

            1Ô∏è‚É£ –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ —Ç–∏–ø –∞–≤—Ç–æ

            2Ô∏è‚É£ –ü–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é

            3Ô∏è‚É£ –ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è –∑ –æ–¥–Ω–æ–¥—É–º—Ü—è–º–∏

            https://t.me/HellTiresBot""");
        message.setReplyMarkup(inlineKeyboardMarkup);
        try {
            Message sentMessage = execute(message);
            int sentMessageId = sentMessage.getMessageId();
            deleteMessage(chatId, sentMessageId - 1);
        } catch (TelegramApiException e) {
            throw new RuntimeException(e);
        }
    }

    public void sendCarsByCategory(long chatId, String category) {
        List<Car> cars = switch (category) {
            case "muscle" -> carRepos.findByCategoryName("–ú–∞—Å–ª–∫–∞—Ä–∏");
            case "sport" -> carRepos.findByCategoryName("–°–ø–æ—Ä—Ç–∫–∞—Ä–∏");
            case "truck" -> carRepos.findByCategoryName("–í–∞–Ω—Ç–∞–∂–Ω—ñ");
            case "retro" -> carRepos.findByCategoryName("–†–µ—Ç—Ä–æ");
            default -> new ArrayList<>();
        };
        if (!cars.isEmpty()) {
            for (Car car : cars) {
                List<String> photoPaths = new ArrayList<>();
                List<String> videoPaths = new ArrayList<>();
                for (TypesImages image : car.getImages()) {
                    photoPaths.add(image.getPhotoPath());
                }
                for (VideoPaths video : car.getVideos()) {
                    videoPaths.add(video.getVideoPath());
                }
                String description = car.getDescription();
                sendImagesWithCaption(chatId, photoPaths, videoPaths, description);
            }
        }
    }

    private void sendImagesWithCaption(long chatId, List<String> photos, List<String> videos, String caption) {
        for (String photoPath : photos) {
            SendPhoto sendPhoto = new SendPhoto();
            sendPhoto.setChatId(String.valueOf(chatId));
            try {
                File file = new ClassPathResource(photoPath).getFile();
                InputFile inputFile = new InputFile(file);
                sendPhoto.setPhoto(inputFile);
                execute(sendPhoto);
            } catch (IOException | TelegramApiException e) {
                throw new RuntimeException(e);
            }
        }
        for (String videoPath : videos) {
            SendVideo sendVideo = new SendVideo();
            sendVideo.setChatId(String.valueOf(chatId));
            try {
                File videoFile = new ClassPathResource(videoPath).getFile();
                InputFile inputFile = new InputFile(videoFile);
                sendVideo.setVideo(inputFile);
                execute(sendVideo);
            } catch (IOException | TelegramApiException e) {
                throw new RuntimeException(e);
            }
        }
        SendMessage message = new SendMessage();
        message.setChatId(String.valueOf(chatId));
        message.setText(caption);
        message.setParseMode("HTML");
        try {
            execute(message);
        } catch (TelegramApiException e) {
            throw new RuntimeException(e);
        }
    }
}